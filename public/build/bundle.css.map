{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Login.svelte",
    "../../CameraOwner.svelte",
    "../../Header.svelte",
    "../../SelectCameraToConnect.svelte",
    "../../Loading.svelte",
    "../../SelectCamera.svelte",
    "../../VideoStream.svelte",
    "../../Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n\r\n  import { setCubesState } from \"../components/Cubes.svelte\";\r\n  import { currentScreen } from \"../stores/app.js\";\r\n  import { auth, database } from \"../firebase\";\r\n\r\n  let username = \"\";\r\n  // let passwordText = ''\r\n\r\n  let wrongCredentials = false;\r\n\r\n  function loginUser(e) {\r\n    if (e.keyCode != 13 && e instanceof KeyboardEvent) {\r\n      /*console.log(e);*/\r\n      return;\r\n    }\r\n\r\n    console.log(\"passed\");\r\n\r\n    auth\r\n      .signInAnonymously()\r\n      .then(() => {\r\n        const user = auth.currentUser;\r\n\r\n        console.log(`users/${user.uid}/name`);\r\n        let nameRef = database.ref(`users/${user.uid}/name`);\r\n        nameRef.set(username);\r\n\r\n        user\r\n          .updateProfile({\r\n            displayName: username,\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.error(errorCode + \"\\n\" + errorMessage);\r\n        wrongCredentials = true;\r\n      });\r\n  }\r\n</script>\r\n\r\n<div id=\"login-form\" transition:fade style=\"position: absolute;\">\r\n  {#if wrongCredentials}\r\n    <p class=\"warning\" transition:fade={{ duration: 200 }}>\r\n      credenciais incorretas\r\n    </p>\r\n  {/if}\r\n\r\n  <div class=\"flexColumn\">\r\n    <div class=\"inputWrapper\" class:wrongCredentials>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nome de Usuário\"\r\n        bind:value={username}\r\n        class=\"transparentInput\"\r\n        on:keypress={loginUser}\r\n      />\r\n      <!-- <input type=\"text\" placeholder=\"Senha\" bind:value={passwordText} class=\"transparentInput\" > -->\r\n    </div>\r\n\r\n    <div class=\"transparentBtn\" on:click={loginUser}>\r\n      <p>Login</p>\r\n    </div>\r\n    <!-- <p class='createAccountText' >não tem uma conta? <span on:click={createUser} >Crie uma nova</span></p> -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  div#login-form {\r\n    z-index: 5;\r\n    padding: 50px 20px;\r\n    background: #561b65d1;\r\n    box-shadow: 0px 0px 10px #5a0079b8;\r\n    max-width: 400px;\r\n    width: 80vw;\r\n  }\r\n\r\n  /* .flexColumn {\r\n  max-width: 400px;\r\n  width: 100%;\r\n} */\r\n\r\n  .transparentBtn {\r\n    max-width: 200px;\r\n  }\r\n\r\n  .transparentInput {\r\n    width: 100%;\r\n    height: 30px;\r\n    opacity: 0.7;\r\n    border: 1.1px solid rgba(255, 255, 255, 0.3);\r\n  }\r\n\r\n  .inputWrapper {\r\n    width: 100%;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  /* .createAccountText {\r\n  color:rgba(255, 255, 255, 0.5);\r\n  font-size: 0.7em;\r\n  margin-top: 5px;\r\n} */\r\n\r\n  /* span {\r\n  //text-decoration: underline;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n} */\r\n\r\n  .warning {\r\n    position: absolute;\r\n    margin: 0;\r\n    transform: translateY(-37px);\r\n    color: #ff4700;\r\n    animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\r\n  }\r\n\r\n  input {\r\n    transition: 0.2s;\r\n  }\r\n\r\n  .wrongCredentials input {\r\n    border-color: rgb(255, 44, 0) !important;\r\n  }\r\n\r\n  .wrongCredentials input::placeholder {\r\n    color: rgb(255, 44, 0) !important;\r\n  }\r\n\r\n  /* div#login-form div.transparentBtn::before{\r\n    content: '';\r\n    background-image: url(\"https://www.seekpng.com/png/full/788-7887426_google-g-png-google-logo-white-png.png\");\r\n    background-position: center;\r\n    background-size: 90%;\r\n    background-repeat: no-repeat;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 10px;\r\n} */\r\n\r\n  @keyframes shake {\r\n    10%,\r\n    90% {\r\n      transform: translate(-1px, -37px);\r\n    }\r\n\r\n    20%,\r\n    80% {\r\n      transform: translate(2px, -37px);\r\n    }\r\n\r\n    30%,\r\n    50%,\r\n    70% {\r\n      transform: translate(-4px, -37px);\r\n    }\r\n\r\n    40%,\r\n    60% {\r\n      transform: translate(4px, -37px);\r\n    }\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { currentScreen } from \"../stores/app.js\";\r\n  import { auth } from \"../firebase\";\r\n  import { subscribeToBackBtn } from \"../components/Header.svelte\";\r\n\r\n  subscribeToBackBtn(\"cameraOwner\", () => {\r\n    auth.signOut();\r\n    console.log(\"signing out\");\r\n  });\r\n\r\n  let videoInputs = [];\r\n\r\n  const intervalFunction = () => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      videoInputs = [];\r\n      for (let device of devices) {\r\n        if (device.kind == \"videoinput\") videoInputs.push(device);\r\n      }\r\n      // console.log(videoInputs)\r\n      if (videoInputs.length == 0) {\r\n        warningText = \"Nenhuma camêra detectada\";\r\n        // console.log(warningText)\r\n      }\r\n    });\r\n  };\r\n\r\n  setInterval(intervalFunction, 2000);\r\n  intervalFunction();\r\n\r\n  $: if (videoInputs.length > 0) {\r\n    warningText = \"\";\r\n  }\r\n\r\n  let warningText = \"\";\r\n</script>\r\n\r\n<div class=\"flexColumn\" style=\"position: absolute; z-index: 4\">\r\n  <div id=\"cameraOwner\" transition:fade class=\"container\">\r\n    <button\r\n      class=\"transparentBtn\"\r\n      class:disabledBtn={warningText}\r\n      on:click={() => {\r\n        if (!warningText) currentScreen.set(\"selectCamera\");\r\n      }}\r\n    >\r\n      <p>Utilizar a própria câmera</p>\r\n    </button>\r\n\r\n    <button\r\n      class=\"transparentBtn\"\r\n      on:click={() => currentScreen.set(\"selectCameraToConnect\")}\r\n    >\r\n      <p>Conectar a uma câmera</p>\r\n    </button>\r\n  </div>\r\n\r\n  {#if warningText}\r\n    <p class=\"warningText\" transition:fade>\r\n      {warningText}\r\n    </p>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .disabledBtn {\r\n    background: #dadada38;\r\n  }\r\n  .disabledBtn,\r\n  .disabledBtn > *,\r\n  .disabledBtn:hover {\r\n    color: #a7a7a7;\r\n    cursor: default;\r\n    box-shadow: none;\r\n  }\r\n\r\n  button.transparentBtn:not(:disabled):active{\r\n      background-color: rgba(255, 255, 255, 0.30); \r\n  }\r\n\r\n  button.transparentBtn {\r\n    border: none;\r\n    outline: none;\r\n    margin: 5px;\r\n    height: clamp(50px, 15vh, 150px);\r\n    width: clamp(100px, 20vw, 200px);\r\n  }\r\n\r\n  .warningText {\r\n    color: #ff2f2f;\r\n    font-size: 1.5em;\r\n    margin: 10px 0 0 0;\r\n    background: #76001c87;\r\n    border: solid 2px #ff2f2f;\r\n    padding: 5px;\r\n  }\r\n\r\n  .flexColumn {\r\n    margin-top: 5em;\r\n    max-width: 500px;\r\n    max-height: 100px;\r\n    margin: 15px;\r\n  }\r\n</style>\r\n",
    "<script context=\"module\">\r\n  // import {backCallbacks} from '../stores/header.js'\r\n  /*const {autoupdater} = require('electron')*/\r\n\r\n\r\n  export function subscribeToBackBtn(screen, callback) {\r\n    backCallbacks.update((paramBackCallbacks) => {\r\n      let found = false;\r\n      paramBackCallbacks.map((item) => {\r\n        if (item[0] == screen) {\r\n          found = true;\r\n          return [screen, callback];\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n\r\n      if (found == true) return paramBackCallbacks;\r\n\r\n      paramBackCallbacks.push([screen, callback]);\r\n      return paramBackCallbacks;\r\n    });\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { auth } from \"../firebase\";\r\n\r\n  import VideoStream from \"../screens/VideoStream.svelte\";\r\n  import { setCubesState } from \"./Cubes.svelte\";\r\n  import { currentScreen } from \"../stores/app.js\";\r\n  import { backCallbacks, configBtn, facetrackOn } from \"../stores/header.js\";\r\n\r\n  let configDisabled = true;\r\n  let backEnabled = false;\r\n  let videoEnabled = false;\r\n  let screensWhereDisableConfig = [\r\n    \"login\",\r\n    \"cameraOwner\",\r\n    \"selectCameraToConnect\",\r\n    \"loading\",\r\n    \"selectCamera\",\r\n  ];\r\n  let screensWhereEnableBack = [\r\n    \"cameraOwner\",\r\n    \"selectCameraToConnect\",\r\n    \"selectCamera\",\r\n  ];\r\n\r\n  // $: screensWhereEnableBack = $backCallbacks.map(item => item[0])\r\n  $: videoEnabled = $currentScreen == \"main\" ? true : false;\r\n\r\n  let body = document.body;\r\n\r\n  $: if ($currentScreen == \"main\") {\r\n    body.classList.add(\"videoEnabled\");\r\n  } else {\r\n    body.classList.remove(\"videoEnabled\");\r\n  }\r\n\r\n  currentScreen.subscribe((screen) => {\r\n    if (screensWhereDisableConfig.indexOf(screen) != -1) {\r\n      configDisabled = true;\r\n    } else {\r\n      configDisabled = false;\r\n    }\r\n\r\n    if (screensWhereEnableBack.indexOf(screen) != -1) {\r\n      backEnabled = true;\r\n    } else {\r\n      backEnabled = false;\r\n    }\r\n  });\r\n\r\n  function backOnClick() {\r\n    for (let item of $backCallbacks) {\r\n      if (item[0] == $currentScreen) {\r\n        item[1]();\r\n      }\r\n    }\r\n  }\r\n\r\n  let isConfigActive = false;\r\n  let configTimeout = null;\r\n</script>\r\n\r\n<div class=\"topContent\" transition:fade>\r\n  <div\r\n    class=\"configContainer\"\r\n    class:disabled={configDisabled}\r\n    class:active={isConfigActive}\r\n    on:click={() => (isConfigActive = !isConfigActive)}\r\n    on:mouseleave={() => {\r\n      configTimeout = setTimeout(() => {\r\n        isConfigActive = false;\r\n      }, 300);\r\n    }}\r\n    on:mouseenter={() => clearTimeout(configTimeout)}\r\n  >\r\n    <div id=\"configBtn\"><i class=\"fas fa-cog fa-2x\" /></div>\r\n    <ul id=\"configItems\">\r\n      <li>Perfil</li>\r\n      <li id=\"cameraConfigBtn\" on:click={configBtn.run($currentScreen)}>\r\n        {#if $facetrackOn} \r\n           <i class=\"fas fa-toggle-on\" />   \r\n        {:else}\r\n           <i class=\"fas fa-toggle-off\" />   \r\n        {/if}\r\n         Seguir rostos\r\n      </li>\r\n      <li id=\"logoutBtn\" on:click={() => auth.signOut()}>Log out</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"backContainer\" class:disabled={!backEnabled || !configDisabled}>\r\n    <div class=\"backBtn\" on:click={backOnClick}>\r\n      <i class=\"fas fa-arrow-left fa-2x\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"header\">\r\n    {#if videoEnabled}\r\n      <div transition:fade>\r\n        <div>\r\n          <VideoStream />\r\n        </div>\r\n      </div>\r\n    {:else}\r\n      <div transition:fade>\r\n        <div>\r\n          <h1 class=\"title\">Remote Camera</h1>\r\n        </div>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .header {\r\n    z-index: 5;\r\n  }\r\n\r\n  .header > div {\r\n    flex: 1;\r\n    position: absolute;\r\n    width: 45vw;\r\n  }\r\n\r\n  .header > div > div {\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .backContainer {\r\n    margin: 10px;\r\n    position: absolute;\r\n    color: rgba(255, 255, 255, 0.7);\r\n    transition: opacity 1s;\r\n    width: 50px;\r\n    top: 0px;\r\n    left: 0px;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n",
    "<script>\r\n    import { fade } from \"svelte/transition\";\r\n\r\n    import { subscribeToBackBtn } from \"../components/Header.svelte\";\r\n    import { currentScreen } from \"../stores/app.js\";\r\n    import { username } from \"../stores/main.js\";\r\n\r\n    let inputValue = \"\";\r\n\r\n    subscribeToBackBtn(\"selectCameraToConnect\", () => {\r\n        currentScreen.set(\"cameraOwner\");\r\n\r\n        console.log(\"changing to cameraOwner\");\r\n    });\r\n\r\n    function btnOnClick() {\r\n        username.set(inputValue);\r\n        currentScreen.set(\"main\");\r\n    }\r\n</script>\r\n\r\n<div style=\"position: absolute;\" class=\"container\" transition:fade>\r\n    <h3>A quem você deseja se conectar?</h3>\r\n    <input\r\n        type=\"text\"\r\n        class=\"transparentInput\"\r\n        placeholder=\"Digite Aqui\"\r\n        bind:value={inputValue}\r\n    />\r\n    <div class=\"transparentBtn\" on:click={btnOnClick}>\r\n        <p>Próximo</p>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n    .transparentInput {\r\n        height: 30px;\r\n        border: solid #fff3 2px;\r\n        /* padding-bottom: 8px */\r\n    }\r\n    h3 {\r\n        margin: 0 0 20px 0;\r\n    }\r\n</style>\r\n",
    "<script>\r\nimport Spinner from \"../components/Spinner.svelte\";\r\n</script>\r\n\r\n\r\n<div class=\"flexColumn\" style=\"position: absolute;\">\r\n    <Spinner/>\r\n</div>\r\n\r\n<style>\r\n.flexColumn {\r\n    justify-content: center;\r\n    height: 60%;\r\n}\r\n</style>",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import { currentScreen, uid } from \"../stores/app.js\";\r\n  import { auth, database } from \"../firebase\";\r\n  import { subscribeToBackBtn } from \"../components/Header.svelte\";\r\n\r\n  subscribeToBackBtn(\"selectCamera\", () => {\r\n    currentScreen.set(\"cameraOwner\");\r\n  });\r\n\r\n  let inputValue = \"\";\r\n\r\n  function* notFirstGen() {\r\n    console.log(\"first - blocked\");\r\n    yield false;\r\n    let dotString = \"\";\r\n    for (let i = 0; i < 3; i++) {\r\n      console.log(\"second - alowed\" + dotString);\r\n      yield true;\r\n      dotString.concat(\".\");\r\n    }\r\n    console.log(\"last\");\r\n    yield;\r\n  }\r\n\r\n  connectFromCode(\"\");\r\n  async function connectFromCode(code) {\r\n    const lastCameraRef = database.ref(\"/users/\" + $uid + \"/lastCamera\");\r\n    let lastCamera = await lastCameraRef.get();\r\n    let reconnectValidUntilRef = database.ref(\r\n      \"/users/\" + lastCamera.val() + \"/reconnectValidUntil\"\r\n    );\r\n    if (code.length == 4) {\r\n      const codeRef = database.ref(\"/cameras/codes/\" + code);\r\n      const snapshot = await codeRef.get();\r\n\r\n      if (!snapshot.exists()) {\r\n        console.log(\"code is not valid\");\r\n        return;\r\n      }\r\n\r\n      console.log($uid);\r\n      var cameraUid = snapshot.val();\r\n\r\n      const connectedWithRef = database.ref(\r\n        \"/users/\" + cameraUid + \"/connectedWith\"\r\n      );\r\n      connectedWithRef.set($uid);\r\n    } else {\r\n      let reconnectValidUntil = await reconnectValidUntilRef.get();\r\n      reconnectValidUntil = reconnectValidUntil.val();\r\n\r\n      if (lastCamera.exists && reconnectValidUntil*1000 > Date.now()) {\r\n        console.log(\"using last camera uid as default\");\r\n        cameraUid = lastCamera.val();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const notFirst = notFirstGen();\r\n    lastCameraRef.set(cameraUid);\r\n\r\n    reconnectValidUntilRef = database.ref(\r\n      \"/users/\" + cameraUid + \"/reconnectValidUntil\"\r\n    );\r\n    reconnectValidUntilRef.on(\"value\", (snapshot) => {\r\n      const data = (snapshot.val()+10800) * 1000;\r\n\r\n      console.log(\"reconnectValidUntil - \" + data);\r\n\r\n      if (notFirst.next().value == false) return;\r\n\r\n      if (data > Date.now()) {\r\n        currentScreen.set(\"main\");\r\n\r\n        reconnectValidUntilRef.off();\r\n      }\r\n    });\r\n    const testAliveRef = database.ref(\"/users/\" + cameraUid + \"/testAlive\");\r\n    let randnum = Math.floor(Math.random() * 1000);\r\n    console.log(randnum);\r\n    setTimeout(() => testAliveRef.set(randnum), 500);\r\n  }\r\n</script>\r\n\r\n<div class=\"flexColumn\" style=\"position: absolute; z-index: 4\">\r\n  <h3>Código da câmera</h3>\r\n  <div id=\"cameraOwner\" transition:fade class=\"container\">\r\n    <input\r\n      type=\"text\"\r\n      class=\"transparentInput\"\r\n      placeholder=\"Digite Aqui\"\r\n      bind:value={inputValue}\r\n      on:keypress={(e) => {\r\n        if (e.key == \"Enter\") connectFromCode(inputValue);\r\n      }}\r\n    />\r\n\r\n    <button class=\"transparentBtn\" on:click={() => connectFromCode(inputValue)}>\r\n      <p>Conectar</p>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .container {\r\n    height: 60px;\r\n  }\r\n\r\n  input {\r\n    margin-right: 5px;\r\n    width: 200% !important;\r\n  }\r\n\r\n  button.transparentBtn:not(:disabled):active{\r\n      background-color: rgba(255, 255, 255, 0.30); \r\n  }\r\n\r\n  button.transparentBtn {\r\n    border: none;\r\n    outline: none;\r\n    margin: 5px;\r\n  }\r\n\r\n  .transparentBtn {\r\n    margin: 0 !important;\r\n    margin-left: 5px !important;\r\n  }\r\n\r\n  .flexColumn {\r\n    margin-top: 5em;\r\n    max-width: 500px;\r\n    max-height: 100px;\r\n    margin: 15px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n    // import {answerCall, createOffer, setupMediaSources} from '../utils/webRTC'\r\n    import {\r\n        connectToHost,\r\n        setupAsHost,\r\n        connectionsHandler,\r\n    } from \"../utils/peerJS\";\r\n    import {\r\n        cubeSize as cubeProperties,\r\n        controlsBtn,\r\n        buttonsState,\r\n    } from \"../stores/cubes\";\r\n    import { setCubesState } from \"../components/Cubes.svelte\";\r\n    import { username } from \"../stores/main\";\r\n    import { configBtn, facetrackOn } from \"../stores/header\";\r\n    import { uid } from \"../stores/app.js\";\r\n    import { fade } from \"svelte/transition\";\r\n    import { database, auth } from \"../firebase\";\r\n\r\n    configBtn.assignFunction(\"main\", () => {\r\n        /* console.log(\"%cPARECE QUE FOI!\", \"color: purple;font-size: 20px\"); */\r\n        facetrackOn.update(prev => !prev)\r\n    });\r\n\r\n    let videoEl = null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function copyText() {\r\n        isCopyAnimActive = true;\r\n\r\n        navigator.clipboard.writeText(this.innerText).catch(\r\n            (err) => { console.error(\"Async: Could not copy text: \", err) }\r\n        );\r\n\r\n        setTimeout(() => {\r\n            isCopyAnimActive = false;\r\n        }, 800);\r\n    }\r\n\r\n    // broadcast the cached watchers list to everyone\r\n    function broadcastOnlineWatchers() {\r\n        if (!connectionsHandler.isHost) return;\r\n\r\n        // if executed from radio input\r\n        if (this) {\r\n            watchers = watchers.map((item) => {\r\n                if (item.name == this.getAttribute(\"watcher\")) {\r\n                    item.controlLevel = parseInt(this.value);\r\n                }\r\n                return item;\r\n            });\r\n        }\r\n\r\n        const message = {\r\n            type: \"users\",\r\n            from: $uid,\r\n            content: watchers,\r\n        };\r\n\r\n        connectionsHandler.broadcast(JSON.stringify(message));\r\n    }\r\n\r\n    async function changeAndBroadcastControlState(n) {\r\n        let twin = {\r\n            0: 3, //left\r\n            1: 2, //right\r\n            2: 1, //up\r\n            3: 0, //down\r\n            4: 5, //horizontal left\r\n            5: 4, //horizontal right\r\n        };\r\n\r\n        let directionRef = database.ref(`users/${$uid}/direction`);\r\n\r\n        let directions = await directionRef.get();\r\n        directions = directions.val() || [0, 0, 0, 0,  0, 0];\r\n        directions[n] = directions[n] == 1 ? 0 : 1;\r\n        if (directions[twin[n]] == 1)\r\n            directions[twin[n]] = directions[n] == 1 ? 0 : 1;\r\n\r\n        directionRef.set(directions);\r\n\r\n        /*\r\n         * const message = {\r\n         *     type: \"controlsState\",\r\n         *     from: connectionsHandler.peer.id,\r\n         *     content: directions,\r\n         *     displayName: $username,\r\n         * };\r\n         * connectionsHandler.broadcast(JSON.stringify(message));\r\n         */\r\n        setActiveMarker(\"\");\r\n    }\r\n    \r\n    const isHost = $username.length == 0 \r\n\r\n    // if there's a 'username'  means the user choose to connect to someone else camera\r\n    if (isHost == false) {\r\n        // setup the peer connection as watcher\r\n        connectToHost(\r\n            $username,\r\n            (remoteStream) => {\r\n                videoEl.srcObject = remoteStream;\r\n            },\r\n            (data) => {\r\n                if (connectionsHandler.isHost) return;\r\n\r\n                if (data.type == \"users\") {\r\n                    watchers = data.content;\r\n                    const me = watchers.filter((item) => item.id == $uid);\r\n\r\n                    if (!me.length){\r\n                        connectionsHandler.peer.disconnect();\r\n                        return\r\n                    }\r\n\r\n                    if (me[0].controlLevel > 1) {\r\n                        setCubesState(\"btnMode\");\r\n                    } else {\r\n                        setCubesState(\"floatOpening\");\r\n                    }\r\n                }\r\n\r\n                switch(data.type){\r\n                    case \"currentPercentage\":\r\n                        currentPercentage = data.content;\r\n                        break\r\n                    case \"currentPercentage\":\r\n                        horizontalPercentage = data.content;\r\n                        break\r\n                    case \"currentPercentage\":\r\n                        markers = data.content;\r\n                        break\r\n                    case \"controlsState\":\r\n                        buttonsState.update(() => {\r\n                            return data.content.map(item => item ? true : false);\r\n                        });\r\n                        break\r\n                    case \"votation\":\r\n                        votations = data.content\r\n                        break\r\n                }\r\n\r\n            }\r\n        );\r\n\r\n        // send to host the camera buttons I have pressed\r\n        controlsBtn.assignFunction(\"main\", (n) => {\r\n            if (typeof n != \"number\") return;\r\n\r\n            const message = {\r\n                type: \"controls\",\r\n                from: connectionsHandler.peer.id,\r\n                content: n,\r\n                displayName: auth.currentUser.displayName,\r\n            };\r\n\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n        });\r\n\r\n    } else if(isHost == true) {\r\n        setCubesState(\"btnMode\");\r\n\r\n        // Broadcast through WebRTC any currentPercent or horizontalPercentage changes on the server\r\n        // and synchronize the currentPercent with the server\r\n        let currentPercentageRef = database.ref(\r\n            `users/${$uid}/currentPercentage`\r\n        );\r\n        currentPercentageRef.on(\"value\", (snapshot) => {\r\n            if (!snapshot.val()) return;\r\n            const message = {\r\n                type: \"currentPercentage\",\r\n                from: connectionsHandler.peer.id,\r\n                content: snapshot.val(),\r\n                displayName: $username,\r\n            };\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n            currentPercentage = snapshot.val();\r\n        });\r\n\r\n\r\n        let horizontalPercentageRef = database.ref(\r\n            `users/${$uid}/horizontalPercentage`\r\n        );\r\n        horizontalPercentageRef.on(\"value\", (snapshot) => {\r\n            if (!snapshot.val()) return;\r\n            const message = {\r\n                type: \"horizontalPercentage\",\r\n                from: connectionsHandler.peer.id,\r\n                content: snapshot.val(),\r\n                displayName: $username,\r\n            };\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n            horizontalPercentage = snapshot.val();\r\n        });\r\n\r\n        // Listen the fixedPositions in the server and update the local ones\r\n        let fixedPositionsRef = database.ref(`users/${$uid}/fixedPositions`);\r\n        fixedPositionsRef.on(\"value\", (snapshot) => {\r\n            const positions = snapshot.val();\r\n            if (!positions) return;\r\n            console.log(positions);\r\n\r\n            let currentMarkerNames = positions.map((marker) => marker.name);\r\n            let markerNames = markers.map((marker) => marker.name);\r\n            if (\r\n                markerNames.sort().join(\"\") !==\r\n                currentMarkerNames.sort().join(\"\")\r\n            ) {\r\n                markers = [];\r\n\r\n                markers = positions.map(({name, percentage}) => ({\r\n                    name,\r\n                    percentage,\r\n                    tooltip: { isVisible: false, timeout: null },\r\n                })\r\n                )\r\n            }\r\n\r\n            // Broadcast the fixedPositions through WebRTC\r\n            const message = {\r\n                type: \"fixedPositions\",\r\n                from: connectionsHandler.peer.id,\r\n                content: markers,\r\n                displayName: $username,\r\n            };\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n        });\r\n\r\n        // update the buttonsState when the server data changes\r\n        let directionRef = database.ref(`users/${$uid}/direction`);\r\n        directionRef.on(\"value\", (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (!data) return;\r\n            console.log(data);\r\n\r\n            buttonsState.update(() => {\r\n                return data.map(item => item ? true : false);\r\n            });\r\n\r\n            let message = {\r\n                type: \"controlsState\",\r\n                from: connectionsHandler.peer.id,\r\n                content: $buttonsState.map((item) => (item ? 1 : 0)),\r\n                displayName: $username,\r\n            };\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n        });\r\n\r\n        controlsBtn.assignFunction(\"main\", async (n) => {\r\n            changeAndBroadcastControlState(n);\r\n        });\r\n\r\n\r\n        // Setup the peer connection as host\r\n        setupAsHost(\r\n            (localStream) => {\r\n                videoEl.srcObject = localStream;\r\n\r\n                console.log('loading ML models...')\r\n\r\n                Promise.all([\r\n                    faceapi.nets.tinyFaceDetector.loadFromUri('./dist/models'),\r\n                    faceapi.nets.faceLandmark68Net.loadFromUri('./dist/models'),\r\n                    faceapi.nets.faceRecognitionNet.loadFromUri('./dist/models'),\r\n                    faceapi.nets.faceExpressionNet.loadFromUri('./dist/models'),\r\n                ]).then(() => {\r\n\r\n                    console.log('ML models loaded!')\r\n\r\n                    const canvas = faceapi.createCanvasFromMedia(videoEl)\r\n                    let displaySize = { width: canvas.width, height: canvas.height }\r\n                    canvas.id = 'webcamVideo' \r\n                    videoEl.parentNode.prepend(canvas)\r\n                    videoEl.style.height = '100%'\r\n                    canvas.style.height = '100%'\r\n                    videoEl.parentNode.style.height = `max(min(calc(45vw*(${canvas.height}/${canvas.width})), calc(80vh*(${canvas.height}/${canvas.width}))),calc(29vh*(${canvas.height}/${canvas.width})))`\r\n\r\n                    canvas.style.position = 'absolute'\r\n                    \r\n                    const directionLeftRef = database.ref(`users/${$uid}/direction/2`);\r\n                    const directionRightRef = database.ref(`users/${$uid}/direction/1`);\r\n                    const directionUpRef = database.ref(`users/${$uid}/direction/0`);\r\n                    const directionDownRef = database.ref(`users/${$uid}/direction/3`);\r\n\r\n                    setInterval(async () => {\r\n                        if($facetrackOn == false){\r\n                            canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\r\n                            return\r\n                        }\r\n\r\n                        if(displaySize.width == 0 || displaySize.height == 0 ){\r\n                            console.log('zero')\r\n                            displaySize = { width: canvas.width, height: canvas.height }\r\n                            return\r\n                        }\r\n                        const detections = await faceapi.detectAllFaces(videoEl,\r\n                            new faceapi.TinyFaceDetectorOptions({\r\n                                scoreThreshold: 0.1\r\n                            }))\r\n                        if(detections.length){\r\n                            const wcenter = detections[0].box.left + detections[0].box.width/2\r\n                            const hcenter = detections[0].box.top + detections[0].box.height/2\r\n                            const wrelative = wcenter-canvas.width/2\r\n                            const hrelative = canvas.height/2-hcenter\r\n                            const wthreshold = canvas.width/5\r\n                            const hthreshold = canvas.height/5\r\n\r\n\r\n                            if(wrelative > wthreshold){\r\n                                directionRightRef.set(1)\r\n                                directionLeftRef.set(0)\r\n                            }else if(wrelative < -wthreshold){\r\n                                directionRightRef.set(0)\r\n                                directionLeftRef.set(1)\r\n                            }else{\r\n                                directionRightRef.set(0)\r\n                                directionLeftRef.set(0)\r\n                            }\r\n\r\n\r\n                            if(hrelative > hthreshold){\r\n                                directionUpRef.set(1)\r\n                                directionDownRef.set(0)\r\n                            }else if(hrelative < -hthreshold){\r\n                                directionUpRef.set(0)\r\n                                directionDownRef.set(1)\r\n                            }else{\r\n                                directionUpRef.set(0)\r\n                                directionDownRef.set(0)\r\n                            }\r\n\r\n                            console.log({wrelative, hrelative})\r\n                            /* console.log(detections[0].box()) */\r\n                        }\r\n                        \r\n\r\n                        const resizedDetections = faceapi.resizeResults(detections, displaySize)\r\n\r\n                        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\r\n                        faceapi.draw.drawDetections(canvas, resizedDetections)\r\n                    }, 100)\r\n                })\r\n\r\n\r\n\r\n            },\r\n            (data) => {\r\n                // make sure that I'm the host, if not, do nothing\r\n                if (!connectionsHandler.isHost) return;\r\n\r\n                // when the handshake message is received, send the current controlsState, fixedPositions and currentPercentage\r\n                switch(data.type){\r\n                    case \"handshake\":\r\n                        let message = {\r\n                            type: \"controlsState\",\r\n                            from: connectionsHandler.peer.id,\r\n                            content: $buttonsState.map((item) => (item ? 1 : 0)),\r\n                            displayName: $username,\r\n                        };\r\n                        connectionsHandler.broadcast(JSON.stringify(message));\r\n\r\n                        // send fixedPositions through WebRTC\r\n                        message = {\r\n                            type: \"fixedPositions\",\r\n                            from: connectionsHandler.peer.id,\r\n                            content: markers,\r\n                            displayName: $username,\r\n                        };\r\n                        connectionsHandler.broadcast(JSON.stringify(message));\r\n\r\n                        // send currentPercentage through WebRTC\r\n                        message = {\r\n                            type: \"currentPercentage\",\r\n                            from: connectionsHandler.peer.id,\r\n                            content: currentPercentage,\r\n                            displayName: $username,\r\n                        };\r\n                        connectionsHandler.broadcast(JSON.stringify(message));\r\n                        break\r\n                    case \"activeMarker\":\r\n                        const isFromTrustedWatcher =\r\n                            watchers.filter(\r\n                                (item) => item.id == data.from && item.controlLevel >= 1\r\n                            ).length == 1 ? true : false;\r\n\r\n                        if(isFromTrustedWatcher) \r\n                            activeMarker = data.content\r\n                        break\r\n                    case \"votation\":\r\n                        if(markers.filter(item => item.name == data.content.name).length >= 1)\r\n                            addVotation(data.content.name, data.content.votes.length ? [data.content.votes[0]] : [])\r\n                        break\r\n                    case \"addMarker\":\r\n                        isFromTrustedWatcher =\r\n                            watchers.filter(\r\n                                (item) => item.id == data.from && item.controlLevel == 2\r\n                            ).length == 1 ? true : false;\r\n\r\n                        if(isFromTrustedWatcher){\r\n                            addMarker(data.content.name, data.content.percentage)\r\n                        } \r\n                        break\r\n                    case \"removeMarker\":\r\n                        isFromTrustedWatcher =\r\n                            watchers.filter(\r\n                                (item) => item.id == data.from && item.controlLevel == 2\r\n                            ).length == 1 ? true : false;\r\n\r\n                        if(isFromTrustedWatcher){\r\n                            removeCurrentFixedPosition()\r\n                        } \r\n\r\n                        break\r\n                    case \"controls\":\r\n                        isFromTrustedWatcher =\r\n                            watchers.filter(\r\n                                (item) => item.id == data.from && item.controlLevel == 2\r\n                            ).length == 1 ? true : false;\r\n                        if (!isFromTrustedWatcher) return;\r\n\r\n                        const n = data.content;\r\n\r\n                        changeAndBroadcastControlState(n);\r\n                        break\r\n                }\r\n\r\n                // update online watchers\r\n                let sameItems = [];\r\n                let newItems = [];\r\n                let extraItems = Array.from(watchers);\r\n\r\n                for (let connection of connectionsHandler.connections) {\r\n                    extraItems = extraItems.filter(\r\n                        (item) => item.id != connection.id\r\n                    );\r\n                    let found = false;\r\n                    for (let watcher of watchers) {\r\n                        if (watcher.id == connection.id) {\r\n                            found = true;\r\n                            sameItems.push(\r\n                                Object.assign(\r\n                                    { controlLevel: watcher.controlLevel },\r\n                                    connection\r\n                                )\r\n                            );\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (found) continue;\r\n\r\n                    newItems.push(connection);\r\n                }\r\n\r\n                watchers = [];\r\n\r\n                for (let item of [...sameItems, ...newItems]) {\r\n                    watchers = [\r\n                        ...watchers,\r\n                        {\r\n                            name: item.displayName,\r\n                            id: item.id,\r\n                            // @ts-ignore\r\n                            controlLevel:\r\n                                typeof item.controlLevel == \"number\"\r\n                                    ? item.controlLevel\r\n                                    : 1,\r\n                        },\r\n                    ];\r\n                }\r\n\r\n                // if there someone new, send this information to all other watchers\r\n                if (newItems.length || extraItems.length) {\r\n                    broadcastOnlineWatchers();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    let watchers = [];\r\n    let isSlidePanelOpen = false;\r\n    let isCopyAnimActive = false;\r\n\r\n    let isCopyPanelActive = false;\r\n    let copyPanelTimeout = null;\r\n    let slidePanelTimeout = null;\r\n\r\n    let markers = [\r\n        /*\r\n         * {\r\n         *     name: \"inicio\",\r\n         *     percentage: 20,\r\n         *     tooltip: { isVisible: false, timeout: null },\r\n         * },\r\n         * {\r\n         *     name: \"meio\",\r\n         *     percentage: 50,\r\n         *     tooltip: { isVisible: false, timeout: null },\r\n         * },\r\n         * {\r\n         *     name: \"fim\",\r\n         *     percentage: 80,\r\n         *     tooltip: { isVisible: false, timeout: null },\r\n         * },\r\n         */\r\n    ];\r\n\r\n    let currentPercentage = 0;\r\n    let horizontalPercentage = 50;\r\n\r\n    const addMarker = async (markerName, markerPercentage) => {\r\n        if(!markerName) return \r\n        const newMarker = {\r\n            name: markerName,\r\n            percentage: markerPercentage,\r\n            tooltip: { isVisible: false, timeout: null },\r\n        }\r\n\r\n        if($username.length != 0){\r\n\r\n            const message = {\r\n                type: \"addMarker\",\r\n                from: connectionsHandler.peer.id,\r\n                content: newMarker,\r\n                displayName: auth.currentUser.displayName,\r\n            };\r\n\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n            return\r\n        }\r\n\r\n\r\n\r\n\r\n        if(markers.filter(item => item.name == markerName).length){\r\n            markers = markers.map((item) => {\r\n                if(item.name != markerName) return item\r\n\r\n                return {...item, percentage: markerPercentage}\r\n            })\r\n        }else{\r\n            markers = [...markers, newMarker]\r\n        }            \r\n\r\n        const message = {\r\n            type: \"fixedPositions\",\r\n            from: connectionsHandler.peer.id,\r\n            content: markers,\r\n            displayName: $username,\r\n        };\r\n        connectionsHandler.broadcast(JSON.stringify(message));\r\n\r\n        /*\r\n         * markers = [\r\n         *     ...markers,\r\n         *     newMarker,\r\n         * ];\r\n         */\r\n        console.log(markers);\r\n\r\n        /*myobject[randomLetter(5)] = Math.floor(Math.random()*100)*/\r\n        const newMarkers = markers.map(({ name, percentage }) => {\r\n            return { name, percentage };\r\n        });\r\n\r\n        let fixedPositionsRef = database.ref(`users/${$uid}/fixedPositions`);\r\n\r\n        fixedPositionsRef.set(newMarkers);\r\n    };\r\n\r\n    const offset = 4;\r\n    function removeCurrentFixedPosition() {\r\n\r\n        if($username.length != 0){\r\n\r\n            const message = {\r\n                type: \"removeMarker\",\r\n                from: connectionsHandler.peer.id,\r\n                content: null,\r\n                displayName: auth.currentUser.displayName,\r\n            };\r\n\r\n            connectionsHandler.broadcast(JSON.stringify(message));\r\n            return\r\n        }\r\n\r\n\r\n        let foundIndexes = [];\r\n        const currentMarkers = markers.filter(\r\n            (item) =>\r\n                item.percentage + offset > currentPercentage &&\r\n                item.percentage - offset < currentPercentage\r\n        );\r\n        for (let [i, marker] of Object.entries(markers)) {\r\n            if (\r\n                marker.percentage + offset > currentPercentage &&\r\n                marker.percentage - offset < currentPercentage\r\n            ) {\r\n                foundIndexes.push(parseInt(i));\r\n            }\r\n        }\r\n        console.log(foundIndexes);\r\n\r\n        if (foundIndexes.length) {\r\n            markers = markers.filter(\r\n                (item) => item.name != markers[foundIndexes[0]].name\r\n            );\r\n            let fixedPositionsRef = database.ref(\r\n                `users/${$uid}/fixedPositions`\r\n            );\r\n            const newMarkers = markers.map(({ name, percentage }) => {\r\n                return { name, percentage };\r\n            });\r\n            fixedPositionsRef.set(markers);\r\n        }\r\n    };\r\n\r\n    let editActive = false;\r\n    let newMarkerName = \"\";\r\n    let editRemoveName = \"\";\r\n    let activeMarker = \"\";\r\n\r\nfunction setActiveMarker(name){\r\n    if($username.length != 0){\r\n        if(name == '') return\r\n        const message = {\r\n            type: \"activeMarker\",\r\n            from: connectionsHandler.peer.id,\r\n            content: name,\r\n            displayName: auth.currentUser.displayName,\r\n        };\r\n\r\n        connectionsHandler.broadcast(JSON.stringify(message));\r\n        return\r\n    }\r\n\r\n    activeMarker = name\r\n}\r\n    let sliderValue = 50\r\n\r\n    function listenActiveMarker() {\r\n        if (activeMarker) {\r\n            const marker = markers.filter((item) => item.name == activeMarker);\r\n            if (!marker.length) return;\r\n\r\n            if (Math.abs(marker[0].percentage - currentPercentage) <= 5) {\r\n                let directionRef = database.ref(`users/${$uid}/direction`);\r\n                directionRef.set([0, 0, 0, 0,  0, 0]);\r\n                setActiveMarker(\"\");\r\n                return;\r\n            }\r\n\r\n            let directionRightRef = database.ref(`users/${$uid}/direction/1`);\r\n            let directionLeftRef = database.ref(`users/${$uid}/direction/2`);\r\n\r\n            if (marker[0].percentage - currentPercentage < 0) {\r\n                directionRightRef.set(0);\r\n                directionLeftRef.set(1);\r\n            } else {\r\n                directionRightRef.set(1);\r\n                directionLeftRef.set(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    setInterval(listenActiveMarker, 200);\r\n\r\n\r\n    function listenHorizontalPercentage() {\r\n        if (Math.abs(sliderValue - horizontalPercentage) > 5) {\r\n\r\n            let directionRightRef = database.ref(`users/${$uid}/direction/4`);\r\n            let directionLeftRef = database.ref(`users/${$uid}/direction/5`);\r\n\r\n            if (sliderValue - horizontalPercentage < 0) {\r\n                directionRightRef.set(0);\r\n                directionLeftRef.set(1);\r\n            } else {\r\n                directionRightRef.set(1);\r\n                directionLeftRef.set(0);\r\n            }\r\n        }else{\r\n            let directionRef = database.ref(`users/${$uid}/direction`);\r\n            directionRef.get().then((snapshot) => {\r\n                let data = snapshot.val()\r\n                if(!data) return\r\n                data[4] = 0\r\n                data[5] = 0\r\n                directionRef.set(data);\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    setInterval(listenHorizontalPercentage, 200);\r\n\r\n    $: meWatcher = watchers.filter((item) => item.id == $uid);\r\n\r\n    let i;\r\n    $: if (\r\n        (i = markers.filter(\r\n            (item) =>\r\n                item.percentage + offset > currentPercentage &&\r\n                item.percentage - offset < currentPercentage\r\n        )) &&\r\n        i.length\r\n    ) {\r\n        editRemoveName = i[0].name;\r\n    } else {\r\n        editRemoveName = \"\";\r\n    }\r\n\r\n    let votations = [ \r\n        /*\r\n         * {\r\n         *     name: \"Item 1\",\r\n         *     time: 10, // 100%\r\n         *     votes: 4,\r\n         *     maxVotes: 10,\r\n         * },\r\n         * {\r\n         *     name: \"Item 2\",\r\n         *     time: 70, // 100%\r\n         *     votes: 7,\r\n         *     maxVotes: 10,\r\n         * }\r\n         */\r\n    ]\r\n\r\nconst updateVotations = () => {\r\n    if(votations.length == 0) return\r\n\r\n    for(let i = votations.length-1; i >= 0; i--){\r\n        votations[i].time+=10\r\n        if(votations[i].votes.length >= votations[i].maxVotes){\r\n            activeMarker = votations[i].name\r\n            votations.splice(i,1)\r\n        }else if(votations[i].time > 100){\r\n            votations.splice(i,1)\r\n        }\r\n    }\r\n}\r\n\r\nfunction addVotation(name, votes=[]){\r\n\r\n    // As a watcher\r\n    if($username.length != 0){\r\n        const message = {\r\n            type: \"votation\",\r\n            from: connectionsHandler.peer.id,\r\n            content: {name, votes: votes.length ? votes[0] : []},\r\n            displayName: auth.currentUser.displayName,\r\n        };\r\n        connectionsHandler.broadcast(JSON.stringify(message))\r\n        return\r\n    }\r\n\r\n    const newVotation = {\r\n        name,\r\n        time: 0,\r\n        votes: [],\r\n        maxVotes: Math.floor(watchers.length/2)||1 \r\n    }\r\n    if(votations.filter(item => item.name == name).length){\r\n\r\n        votations = votations.map((item) => {\r\n            if(item.name != name) return item\r\n\r\n            return {...item, votes: votes.length ? [...item.votes, votes[0]] : item.votes}\r\n        })\r\n    }else{\r\n        votations.push(newVotation)\r\n    }\r\n\r\n    const message = {\r\n        type: \"votation\",\r\n        from: connectionsHandler.peer.id,\r\n        content: votations,\r\n        displayName: auth.currentUser.displayName,\r\n    };\r\n    connectionsHandler.broadcast(JSON.stringify(message))\r\n\r\n    updateVotations()\r\n\r\n}\r\n\r\nsetInterval(updateVotations, 5000)\r\n\r\n</script>\r\n\r\n<div class=\"flexColumn\" style=\"align-items: baseline\">\r\n    <div class=\"videoContainer\">\r\n        <video id=\"webcamVideo\" autoplay playsinline bind:this={videoEl} />\r\n    </div>\r\n    <div style=\"width:100%; height: 20px\">\r\n        <div class=\"positionBarContainer\">\r\n            <div\r\n                class=\"currentPosition\"\r\n                style=\"--percentage: {currentPercentage}\"\r\n            />\r\n\r\n            {#each markers as { percentage, name, tooltip }}\r\n                <div\r\n                    class=\"marker\"\r\n                    style=\"--percentage: {percentage}\"\r\n                    on:mouseenter={() => {\r\n                        clearTimeout(tooltip.timeout);\r\n                        tooltip.isVisible = true;\r\n                    }}\r\n                    on:mouseleave={() => {\r\n                        tooltip.timeout = setTimeout(() => {\r\n                            tooltip.isVisible = false;\r\n                        }, 500);\r\n                    }}\r\n                    on:click={() => {\r\n                    if(meWatcher.length && meWatcher[0].controlLevel == 1){\r\n                        addVotation(name, [auth.currentUser.displayName])\r\n                    }else if(connectionsHandler.isHost || (meWatcher.length && meWatcher[0].controlLevel >0) ){\r\n                        setActiveMarker(name);\r\n                    }\r\n                    }}\r\n                >\r\n                    <div\r\n                        class=\"marker-tooltip\"\r\n                        class:active={tooltip.isVisible}\r\n                    >\r\n                        {name}\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    </div>\r\n    {#if connectionsHandler.isHost || (meWatcher.length && meWatcher[0].controlLevel == 2)}\r\n        <div class=\"editionBar\" style=\"width: 100%\">\r\n            <div class=\"flexRow\" style=\"height: 20px; margin: 5px 0;\">\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"transparentInput\"\r\n                    style=\"flex: 1; \"\r\n                    placeholder=\"Digite Aqui\"\r\n                    bind:value={newMarkerName}\r\n                    on:keypress={(e) => {\r\n                        if (e.key == \"Enter\"){\r\n                            addMarker(\r\n                                newMarkerName,\r\n                                currentPercentage\r\n                                /* Math.floor(Math.random() * 100) */\r\n                            );\r\n                            newMarkerName = \"\"\r\n                        }\r\n                    }}\r\n                />\r\n                <button\r\n                    class=\"transparentBtn editItem\"\r\n                    on:click={() => {\r\n                        addMarker(\r\n                            newMarkerName,\r\n                            currentPercentage\r\n                            /* Math.floor(Math.random() * 100) */\r\n                        );\r\n                        newMarkerName = \"\"\r\n                    }}>Adicionar Marcador</button\r\n                >\r\n            </div>\r\n            <div>\r\n                {#if editRemoveName}\r\n                    <button\r\n                        class=\"transparentBtn removeItem\"\r\n                        on:click={removeCurrentFixedPosition}\r\n                    >\r\n                        <p>Remover {editRemoveName}</p>\r\n                    </button>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"slidebarContainer\">\r\n            <div class=\"shadow\" style={`--percentage: ${horizontalPercentage}%`} ></div>\r\n            <input type=\"range\" bind:value={sliderValue}>\r\n        </div>\r\n    {/if}\r\n</div>\r\n<div class=\"floatingIcons\">\r\n    <div on:click={() => (isCopyPanelActive = !isCopyPanelActive)}>\r\n        <i class=\"fas fa-share fa-2x\" />\r\n    </div>\r\n    <div on:click={() => (isSlidePanelOpen = !isSlidePanelOpen)}>\r\n        <i class=\"fas fa-user-friends fa-2x\" />\r\n    </div>\r\n</div>\r\n\r\n<div\r\n    class=\"slideFromRightContainer\"\r\n    class:open={isSlidePanelOpen}\r\n    on:mouseleave={() => {\r\n        slidePanelTimeout = setTimeout(() => {\r\n            isSlidePanelOpen = false;\r\n        }, 300);\r\n    }}\r\n    on:mouseenter={() => clearTimeout(slidePanelTimeout)}\r\n>\r\n    <h2>Participantes</h2>\r\n    <div class=\"listHeader\">\r\n        <span>Nome</span>\r\n        <span>Nível de Controle</span>\r\n    </div>\r\n    <ul>\r\n        {#each watchers as watcher}\r\n            <li>\r\n                <span class:me={watcher.id == $uid}>{watcher.name}</span>\r\n                <div\r\n                    style={`pointer-events: ${\r\n                        connectionsHandler.isHost ? \"auto\" : \"none\"\r\n                    }`}\r\n                >\r\n                    <input\r\n                        on:change={broadcastOnlineWatchers}\r\n                        watcher={watcher.name}\r\n                        type=\"radio\"\r\n                        bind:group={watcher.controlLevel}\r\n                        value={0}\r\n                    />\r\n                    <input\r\n                        on:change={broadcastOnlineWatchers}\r\n                        watcher={watcher.name}\r\n                        type=\"radio\"\r\n                        bind:group={watcher.controlLevel}\r\n                        value={1}\r\n                    />\r\n                    <input\r\n                        on:change={broadcastOnlineWatchers}\r\n                        watcher={watcher.name}\r\n                        type=\"radio\"\r\n                        bind:group={watcher.controlLevel}\r\n                        value={2}\r\n                    />\r\n                </div>\r\n            </li>\r\n        {/each}\r\n    </ul>\r\n</div>\r\n\r\n{#if isCopyPanelActive}\r\n    <div\r\n        class=\"copyPanel\"\r\n        transition:fade\r\n        on:mouseleave={() => {\r\n            copyPanelTimeout = setTimeout(() => {\r\n                isCopyPanelActive = false;\r\n            }, 300);\r\n        }}\r\n        on:mouseenter={() => clearTimeout(copyPanelTimeout)}\r\n    >\r\n        <h2>\r\n            compartilhe o código abaixo para outras pessoas entrarem na sua\r\n            chamada\r\n        </h2>\r\n        <div>\r\n            <span>clique para copiar</span>\r\n            <div>\r\n                <p on:click={copyText} class:active={isCopyAnimActive}>\r\n                    {$username.length ? $username : $uid}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n{#if votations.length}\r\n    <div class=\"votations\" transition:fade>\r\n      <h3>Votações Ativas</h3>\r\n      <ul>\r\n        {#each votations as {name, time, votes, maxVotes} }\r\n            <li on:click={() => { addVotation(name, [auth.currentUser.displayName]) }}>\r\n              <div class=\"timer\">\r\n                <svg width=\"50\" height=\"50\" viewBox=\"0 0 100 100\">\r\n                  <defs>\r\n                    <clipPath id=\"clipPath-{name.replace(' ' ,'-')}\">\r\n                    <rect x=\"0\" y=\"{Math.floor(100-votes.length/maxVotes*100)}\" width=\"100\" height=\"100\"></rect>\r\n                    </clipPath>\r\n                  </defs>\r\n                  \r\n                  <circle class=\"progressFill\" cx=\"50\" cy=\"50\" r=\"45\" style=\" clip-path: url(#clipPath-{name.replace(' ' ,'-')}); \"></circle>\r\n\r\n                  <circle class=\"progressLine\" stroke-linecap=\"round\" cx=\"50\" cy=\"50\" r=\"45\" stroke-width=\"7\" fill=\"none\" stroke-dasharray=\"315\" stroke-dashoffset=\"{Math.floor(315-time/100*315)}\" stroke-mitterlimit=\"0\" transform=\"rotate(-90 ) translate(-100 0)\"></circle>\r\n                </svg>\r\n                <span class=\"svgText\">{votes.length}</span>\r\n              </div>\r\n              <p>{name}</p>\r\n            </li>\r\n        {/each}\r\n      </ul>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .videoContainer {\r\n        /* --size: 90%;\r\n            width: var(--size); */\r\n        position: relative;\r\n        width: 100%;\r\n        /* height: var(--size); */\r\n        /* margin-bottom: 1.5rem; */\r\n        max-width: 80vh;\r\n        background: #2c3e50;\r\n    }\r\n\r\n    .videoContainer video {\r\n        height: 35vw\r\n    }\r\n\r\n\r\n    .floatingIcons {\r\n        position: fixed;\r\n        top: 10px;\r\n        right: 0;\r\n        padding: 3px;\r\n        display: flex;\r\n        flex-direction: row;\r\n    }\r\n\r\n    .floatingIcons > div {\r\n        padding: 5px 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .floatingIcons i {\r\n        color: rgba(255, 255, 255, 0.7);\r\n        transition: 0.3s;\r\n    }\r\n\r\n    .floatingIcons div:hover > i {\r\n        color: rgba(255, 255, 255, 1);\r\n    }\r\n\r\n    .slideFromRightContainer {\r\n        --width: 250px;\r\n        height: 100vh;\r\n        width: var(--width);\r\n        position: fixed;\r\n        background-color: #b246d2;\r\n        box-shadow: 0 0 20px 8px #4e0d4fb3;\r\n        right: calc(-1 * var(--width));\r\n        transition: right 0.5s;\r\n        top: 0;\r\n        z-index: 4;\r\n    }\r\n\r\n    .slideFromRightContainer.open {\r\n        right: 0;\r\n    }\r\n\r\n    .slideFromRightContainer ul {\r\n        margin: 0;\r\n        /* padding: 0 30px; */\r\n        padding: 0;\r\n        padding-right: 35px;\r\n    }\r\n\r\n    .slideFromRightContainer li {\r\n        display: flex;\r\n    }\r\n\r\n    .slideFromRightContainer li > span {\r\n        /* margin-right: 10px; */\r\n        flex: 1;\r\n        text-align: center;\r\n    }\r\n\r\n    input[type=\"radio\"] {\r\n        appearance: none;\r\n        -webkit-appearance: none;\r\n        border-radius: 50%;\r\n        width: 16px;\r\n        height: 16px;\r\n\r\n        border: 1px solid #ffffff40;\r\n        /* border: none; */\r\n        transition: 0.1s all linear;\r\n        margin-right: 5px;\r\n\r\n        position: relative;\r\n        top: 4px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .slideFromRightContainer input:nth-child(1):checked {\r\n        background-color: red;\r\n        border-color: red;\r\n    }\r\n    .slideFromRightContainer input:nth-child(2):checked {\r\n        background-color: white;\r\n        border-color: white;\r\n    }\r\n    .slideFromRightContainer input:nth-child(3):checked {\r\n        background-color: green;\r\n        border-color: green;\r\n    }\r\n\r\n    h2 {\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n\r\n    .listHeader {\r\n        display: flex;\r\n        /* width: 100%; */\r\n        text-align: center;\r\n        /* padding: 0 30px; */\r\n        padding: 0;\r\n        padding-right: 40px;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .listHeader span:nth-child(1) {\r\n        flex: 1;\r\n    }\r\n\r\n    .listHeader span:nth-child(2) {\r\n        width: 70px;\r\n    }\r\n\r\n    .copyPanel {\r\n        width: clamp(200px, 70vw, 400px);\r\n        padding: 10px;\r\n        position: fixed;\r\n        background-color: #782299;\r\n        box-shadow: 0px 0px 20px 5px #4f194fb3;\r\n        top: 60px;\r\n        right: clamp(20px, calc(100vw - 400px), 90px);\r\n        text-align: center;\r\n        border-radius: 3px;\r\n    }\r\n\r\n    .copyPanel div {\r\n        width: 100%;\r\n    }\r\n\r\n    .copyPanel div span {\r\n        margin-left: 5px;\r\n        color: #ffffffc4;\r\n        font-size: 0.8em;\r\n    }\r\n\r\n    .copyPanel > div {\r\n        align-items: baseline;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .copyPanel div p {\r\n        background: #611b75;\r\n        padding: 10px;\r\n        border: 2px solid #5b1a6d;\r\n        border-radius: 5px;\r\n        margin: 0;\r\n        cursor: pointer;\r\n        position: relative;\r\n        font-size: clamp(0.7rem, 4vw, 1rem);\r\n    }\r\n\r\n    .copyPanel div p::before {\r\n        content: \"Copiado\";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        background: white;\r\n        opacity: 0;\r\n        color: #781b9c;\r\n        line-height: 36px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .copyPanel div p.active::before {\r\n        animation: shine 1s normal;\r\n    }\r\n\r\n    @keyframes shine {\r\n        0% {\r\n            opacity: 0;\r\n        }\r\n        50% {\r\n            opacity: 1;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    .positionBarContainer {\r\n        width: 100%;\r\n        height: 15px;\r\n        background-color: #a32ad0cf;\r\n        position: relative;\r\n        border: #87249c solid 1px;\r\n        border-top: none;\r\n        opacity: 0.5;\r\n        transition: height 0.2s ease-out 1s, opacity 0.2s ease-out 1s;\r\n        --percentage: 0;\r\n    }\r\n\r\n    .positionBarContainer:hover {\r\n        height: 20px;\r\n        opacity: 1;\r\n        transition: height 0.2s ease-in 0s, opacity 0.2s ease-in 0s;\r\n    }\r\n\r\n    .currentPosition {\r\n        background-color: #5b1a6d;\r\n    }\r\n\r\n    .currentPosition,\r\n    .marker {\r\n        transition: left 0.1s, background-color 0.1s;\r\n        height: inherit;\r\n        position: absolute;\r\n        width: 15px;\r\n        left: calc(var(--percentage) / 100 * (100% - 15px));\r\n    }\r\n\r\n    .marker {\r\n        /*background-color: transparent;*/\r\n        background-color: red;\r\n        border: #80149e solid var(--border);\r\n        height: calc(100% - var(--border) * 2 + 1px);\r\n        --border: 2px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .marker:hover {\r\n        background-color: #80149e;\r\n    }\r\n\r\n    .marker-tooltip.active,\r\n    .marker-tooltip.active::after {\r\n        pointer-events: auto;\r\n        opacity: 1;\r\n    }\r\n\r\n    .marker-tooltip {\r\n        max-width: 120px;\r\n        padding: 10px;\r\n        color: white;\r\n        background-color: #2c3e50;\r\n        position: absolute;\r\n        bottom: calc(100% + 5px);\r\n        text-align: center;\r\n        border-radius: 4px;\r\n        transition: opacity 0.2s;\r\n\r\n        pointer-events: none;\r\n        opacity: 0;\r\n        cursor: default;\r\n    }\r\n\r\n    .marker-tooltip::after {\r\n        content: \" \";\r\n        position: absolute;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        border-color: #2c3e50 transparent #f9080800 #2c3e50;\r\n        transition: opacity 0.2s;\r\n        bottom: -5px;\r\n        left: 0;\r\n        pointer-events: none;\r\n        opacity: 0;\r\n    }\r\n\r\n    .editionBar > div.flexRow * {\r\n        border-radius: 0;\r\n        height: 100%;\r\n    }\r\n\r\n    .editionBar > div.flexRow button {\r\n        border: 1px solid #ffffff45;\r\n        width: auto;\r\n    }\r\n\r\n    .editionBar .editItem {\r\n        color: #fff;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .editionBar .removeItem.transparentBtn:hover {\r\n        box-shadow: 0px 0px 20px rgba(255, 0, 0, 0.32);\r\n    }\r\n\r\n    .editionBar .removeItem {\r\n        background: rgba(157, 13, 13, 0.71);\r\n        border-color: #ff0000b3;\r\n        cursor: pointer;\r\n        height: 30px;\r\n    }\r\n\r\n    .editionBar .removeItem p {\r\n        color: #ff9393;\r\n    }\r\n\r\n    .editionBar {\r\n        opacity: 0;\r\n        transition: height 0.2s ease-out 1s, opacity 0.2s ease-out 1s;\r\n    }\r\n\r\n    span.me {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .editionBar:hover,\r\n    .editionBar:focus-within {\r\n        opacity: 1;\r\n        transition: height 0.2s ease-in 0s, opacity 0.2s ease-in 0s;\r\n    }\r\n\r\n\r\n    /* Votation */\r\n\r\n.votations h3 {\r\n  color: white;\r\n        text-align: center;\r\n}\r\n\r\n.votations {\r\n  background: rgba(255,255,255,0.15);\r\n  width: 20vw;\r\nmax-width: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 5px 5px;\r\n  font-family: sans-serif;\r\n    right: calc(-20vw - 25px);\r\n        position: absolute;\r\n}\r\n\r\n.votations ul {\r\n  padding: 0;\r\n  width: 100%;\r\n}\r\n\r\n.votations li {\r\n  padding: 3px 0;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.votations li:hover {\r\n  background: #ffffff50;\r\n}\r\n\r\n.timer .svgText {\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  position: absolute;\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n\r\n.timer .progressFill {\r\n  fill: rgba(255,255,255,0.5);\r\n}\r\n\r\n.timer .progressLine {\r\n  stroke: white\r\n}\r\n\r\n.votations li .timer {\r\n  width: 50px;\r\n  height: 100%;\r\n  display: grid;\r\n  place-items: center;\r\n  background: none;\r\n}\r\n\r\n.votations li>p {\r\n  width: auto;\r\n  margin: 0;\r\n  padding: 0px 10px;\r\n}\r\n\r\n\r\n.slidebarContainer {\r\n  width: 100%;\r\n  display: flex;\r\n  height: 10px;\r\n  position: relative;\r\n  margin-top: 20px;\r\n}\r\n\r\n.slidebarContainer input {\r\n  flex: 1;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  height: 100%;\r\n  background-color: rgb(201, 144, 242);\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  outline: none;\r\n  z-index: 0;\r\n}\r\n\r\n.slidebarContainer input::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  border: solid rgba(255,255,255,0.7) 2px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: rgb(113,0,228);\r\n  cursor: pointer;\r\n}\r\n\r\n.slidebarContainer input::-moz-range-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  border: solid rgba(255,255,255,0.7) 2px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: rgb(113,0,228);\r\n  cursor: pointer;\r\n}\r\n\r\n.slidebarContainer .shadow {\r\n  /* border: solid rgb(201, 144, 242) 2px; */\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-top: -5px;\r\n  background-color: rgb(201, 144, 242);\r\n  position: absolute;\r\n  margin-left: calc(var(--percentage) - 21px)\r\n  \r\n}\r\n\r\n</style>\r\n",
    "<i class=\"fas fa-spinner rotate\"></i>\r\n\r\n<style>\r\n    @keyframes spinAround {\r\n\tfrom {\r\n    \ttransform: rotate(0deg);\r\n    }\r\n    \r\n    to {\r\n    \ttransform: rotate(360deg);\r\n    }\r\n    \r\n}\r\n\r\n.rotate {\r\n    animation: spinAround 1s steps(8,end) infinite;\r\n    color: white;\r\n    font-size: 4em;\r\n}\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}